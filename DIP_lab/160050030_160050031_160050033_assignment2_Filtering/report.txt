function matrix = myLinearContrastStretching(imgmatrix)

[ a, b, dimension] = size(mat2gray(imgmatrix));
if dimension==1
    max1 = max(max(imgmatrix));
	min1 = min(min(imgmatrix));
    matrix = (255/(max1- min1))*(imgmatrix-min1); 
else	
        
   	    max1 = max(max(imgmatrix(:,:,1)));
		min1 = min(min(imgmatrix(:,:,1)));
	    matrix(:,:,1) = (255/(max1- min1))*(imgmatrix(:,:,1)-min1);
        
        
   	    max2 = max(max(imgmatrix(:,:,2)));
		min2 = min(min(imgmatrix(:,:,2)));
	    matrix(:,:,2) = (255/(max2- min2))*(imgmatrix(:,:,2)-min2);
        
        
   	    max3 = max(max(imgmatrix(:,:,3)));
		min3 = min(min(imgmatrix(:,:,3)));
	    matrix(:,:,3) = (255/(max3- min3))*(imgmatrix(:,:,3)-min3);
        	
end



%% MyMainScript

tic;
%% Your code here
imgPath1 = '../data/lionCrop.mat';
Struct = load(imgPath1);
Image1 = Struct.imageOrig;
InputImage = mat2gray(myLinearContrastStretching(Image1));
radius1=2;
scale1=2;
OutputImage=myUnsharpMasking(Image1,radius1,scale1);
	figure
subplot(1,2,1);
 imshow(InputImage), colorbar;
 subplot(1,2,2);
 imshow(OutputImage), colorbar;

 
 
imgPath2 = '../data/superMoonCrop.mat';
Struct2 = load(imgPath2);
Image2 = Struct2.imageOrig;
InputImage2 = mat2gray(myLinearContrastStretching(Image2));
radius2=2;
scale2=2;
OutputImage2=myUnsharpMasking(Image2,radius2,scale2);
	figure
subplot(1,2,1);
 imshow(InputImage2), colorbar;
 subplot(1,2,2);
 imshow(OutputImage2), colorbar;








toc;
function [OutputImage]= myUnsharpMasking(Image,radius,scale)
A = fspecial('gaussian',[5,5], radius);
convolution = imfilter(Image,A,'conv');

matrix = Image + scale*(Image - convolution);
OutputImage = mat2gray(myLinearContrastStretching(matrix));


end


ASSIGNMENT 2 QUESTION 1
Files included --
myLinearContrastStretching.m
myMainScript.m
myUnsharpMasking.m
OUTPUT -
For lionCrop.mat -
Window size of gaussian = 5x5 radius =2 scaling =2
For superMoon.mat
Window size of gaussian = 5x5 radius =2 scaling =2
